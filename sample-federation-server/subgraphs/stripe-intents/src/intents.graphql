# directive @tag(name: String!) repeatable on FIELD_DEFINITION
# extend schema @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])
# @contact isn't being printed to the generated-schema.graphql file
# See https://github.com/apollographql/federation/issues/1847
# directive @contact(
#   "Contact title of the subgraph owner"
#   name: String!
#   "URL where the subgraph's owner can be reached"
#   url: String
#   "Other relevant notes can be included here; supports markdown links"
#   description: String
# ) on SCHEMA

# schema {
#   query: Query
#   mutation: Mutation
# }
type Query {
  stripeGetPaymentMethod(paymentIntentId: String): PaymentMethodResponse
  stripeGetPaymentIntent(paymentIntentId: String): IntentResponse
}
type Mutation {
  stripeCreatePaymentIntent(input: StripeIntent): IntentResponse
  stripeAutoPay(input: AutoPayInput): PaymentResponse
}

input AutoPayInput {
  email: String
  policy_locator: String
  invoice_locator: String
  amount: Int
  process_source: String
}
type PaymentResponse {
  success: Boolean!
  code: String!
  message: String!
}
input StripeIntent {
  "The Stripe Customer ID"
  customer: String
  "The scheduled Payment amount"
  amount: Int
  setup_future_usage: String
  payment_method: String
  confirmation_method: String
  policy_locator: String
  invoice_locator: String
  process_source: String
  automatic_payment_methods: IsEnabled
  currency: String
}

input IsEnabled {
  enabled: Boolean
}

type IntentResponse {
  clientSecret: String
  paymentIntentId: String
  stripeCustomerID: String
  success: Boolean!
  code: String!
  message: String!
}

type PaymentMethodResponse {
  id: ID
  brand: String
  last4: String
  created: String
}
