# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

fastlane_require 'dotenv'

before_all do
  # Dotenv.overload '.env'
#   update_fastlane
  # yarn(
  #   command: "install",
  #   package_path: "../../package.json"
  # )
  increment_version_code(
      gradle_file_path: "app/build.gradle",
    )
  ANDROID_VERSION_NAME = get_version_name(
        gradle_file_path:"app/build.gradle",
        ext_constant_name:"versionName"
  )
  ANDROID_VERSION_CODE = get_version_code(
    gradle_file_path:"app/build.gradle",
    ext_constant_name:"versionCode"
  )
end

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "clean assembleRelease")
  #   crashlytics
  
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
  desc "Building your App in version qa"
  lane :qa do |options|
    puts "+---------------------------------+".bold.blue
    puts "|-- Environment: #{ENV["ENVFILE"]} ðŸš€ --|".bold.blue
    puts "+---------------------------------+".bold.blue

    gradle(
      task: "--stop",
    #   # build_type: "Release",
      task: 'clean assemble', flavor:'qa', build_type:'Release', print_command: false, properties: { 
    # gradle(task: 'clean assembleRelease -x bundleQaReleaseJsAndAssets', print_command: false, properties: {
      "LOOP_UPLOAD_STORE_FILE" => ENV["LOOP_UPLOAD_STORE_FILE"],
      "LOOP_UPLOAD_STORE_PASSWORD" => ENV["LOOP_UPLOAD_STORE_PASSWORD"],
      "LOOP_UPLOAD_KEY_ALIAS" => ENV["LOOP_UPLOAD_KEY_ALIAS"],
      "LOOP_UPLOAD_KEY_PASSWORD" => ENV["LOOP_UPLOAD_KEY_PASSWORD"]
    })

    firebase_app_distribution(
      app: '',
      groups: "sampleer-dev-android",
      firebase_cli_token: ENV["FIREBASE_TOKEN"],
      release_notes: "Lots of amazing new features to test out!"
    )
  end
  desc "Building your App in version beta"
  lane :uat do |options|
    puts "+---------------------------------+".bold.blue
    puts "|-- Environment: #{options[:env]} ðŸš€ --|".bold.blue
    puts "+---------------------------------+".bold.blue


    gradle(
      task: "--stop",
    #   # build_type: "Release",
      task: 'clean assemble', flavor:'uat', build_type:'Release', print_command: false, properties: { 
    # gradle(task: 'clean assembleRelease -x bundleQaReleaseJsAndAssets', print_command: false, properties: {
      "LOOP_UPLOAD_STORE_FILE" => ENV["LOOP_UPLOAD_STORE_FILE"],
      "LOOP_UPLOAD_STORE_PASSWORD" => ENV["LOOP_UPLOAD_STORE_PASSWORD"],
      "LOOP_UPLOAD_KEY_ALIAS" => ENV["LOOP_UPLOAD_KEY_ALIAS"],
      "LOOP_UPLOAD_KEY_PASSWORD" => ENV["LOOP_UPLOAD_KEY_PASSWORD"]
    })

    firebase_app_distribution(
      app: '',
      # groups: "sample-dev-android",
      firebase_cli_token: ENV["FIREBASE_TOKEN"],
      release_notes: "Lots of amazing new features to test out!"
    )
  end
end
