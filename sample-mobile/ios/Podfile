require_relative '../../node_modules/react-native/scripts/react_native_pods'
require_relative '../../node_modules/@react-native-community/cli-platform-ios/native_modules'
permissions_path = '../../node_modules/react-native-permissions/ios'
platform :ios, '13.0'

# $RNMapboxMapsVersion = '~> 10.9.0'

install! 'cocoapods', :deterministic_uuids => false
# $RNMapboxMapsImpl = 'mapbox'
abstract_target 'SampleCommonPods' do
  config = use_native_modules!
  


  # pre_install do |installer|
  # $RNMapboxMaps.pre_install(installer)
  # end
  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  target 'Sample' do
  end

  target 'SampleQA' do
  end

  target 'SampleUAT' do
  end
  
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  $RNFirebaseAsStaticFramework = true
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
  pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
  pod 'Permission-Motion', :path => "#{permissions_path}/Motion"
  pod 'Permission-LocationAccuracy', :path => "#{permissions_path}/LocationAccuracy"
  pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
  pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
  pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
  pod 'TensorFlowLiteC', :podspec => 'https://sentiance-u1-sdk-downloads.s3.eu-west-1.amazonaws.com/ios/frameworks/TensorFlowLiteC/2.7.0/TensorFlowLiteC.podspec'
  pod 'RNSentianceCore', :path => '../../node_modules/@sentiance-react-native/core/ios'



  target 'SampleTests' do
    inherit! :complete
    # Pods for testing
  end

  # post_install do |installer|
  #   # $RNMapboxMaps.post_install(installer)
  #   react_native_post_install(
  #     installer,
  #     # Set `mac_catalyst_enabled` to `true` in order to apply patches
  #     # necessary for Mac Catalyst builds
  #     :mac_catalyst_enabled => false
  #   )
  #   installer.generated_projects.each do |project|
  #     project.targets.each do |target|
  #         target.build_configurations.each do |config|
  #             config.build_settings["DEVELOPMENT_TEAM"] = "LJCKUJ49P9"
  #          end
  #     end
  #   end
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  # end

  # post_install do |installer|
  #   react_native_post_install(installer)
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  #   # Add these lines for Xcode 14 builds
  #   installer.generated_projects.each do |project|
  #     project.targets.each do |target|
  #         target.build_configurations.each do |config|
  #             config.build_settings["DEVELOPMENT_TEAM"] = "LJCKUJ49P9"
  #         end
  #     end
  #   end
  #   # End of added lines
  # end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
 
end
